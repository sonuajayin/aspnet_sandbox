# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:
  - task: DotNetCoreCLI@2
    displayName: 'DotNet Core Build'
    inputs:
      command: build
      projects: '**/*web/*.csproj'
      configuration: $(buildConfiguration)
  
  - task: DotNetCoreCLI@2
    displayName: 'Run Test'
    inputs:
      command: 'test'
      arguments: '--configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true'
      publishTestResults: true
      projects: '**/*Tests/*.csproj'

  - script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'  
    displayName: 'Install ReportGenerator tool' 

  - script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
    displayName: 'Create reports' 
  
  - task: PublishCodeCoverageResults@1  
    displayName: 'Publish code coverage'  
    inputs:  
      codeCoverageTool: Cobertura  
      summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml' 
  
  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: True
      arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: True
  
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'DotNetCoreApp'
  
  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'AZDotnet'
      appType: 'webApp'
      appName: 'dotnetazdemo'
      package: $(System.DefaultWorkingDirectory)/**/*.zip   